SELECT
PostID,
UserID,
SUM(Score) AS CommentsTotalScore
FROM Comments
GROUP BY PostID, UserID
) AS CmtTotScr
JOIN Posts ON Posts.ID=CmtTotScr.PostID AND Posts.OwnerUserId=CmtTotScr.UserID
WHERE Posts.PostTypeId=1
ORDER BY CmtTotScr.CommentsTotalScore DESC
LIMIT 10")
head(zad5_dplyr())
head(zad5_sqldf()
)
head(Badges)
head(sqldf("SELECT
Name
FROM Badges
WHERE Class=1
GROUP BY Name
HAVING COUNT(*) BETWEEN 2 AND 10"))
head(sqldf("SELECT
Name
FROM Badges
WHERE Class=1
GROUP BY Name
HAVING COUNT(*)"))
length(badges[[1]])
length(Badges[[1]])
length(zad6_sqldf())
length(zad6_sqldf
)
head(zad6_sqldf)
zad6_sqldf
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <- c(1,2,3,4)
dim(v) <- c(2,2)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <- c(1,2,3,4)
dim(v) <- c(2,2)
Mnn(v,1)
v
v <-c(1,3,5,6,3,63,6,3,6)
dim(c) <-c(3,2)
dim(v) <-c(3,2)
dim(v) <-c(3,3)
v
Mnn(v,1)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <- c(1,2,3,4)
dim(v) <- c(2,2)
Mnn(v,1)
v <-c(1,3,5,6,3,63,6,3,6)
v
dim(v) <- c(3,3)
v
Mnn(v,1)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Mnn(v,1)
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Mnn(v,1)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Mnn(v,1)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Mnn(v,1)
Mnn(v,2)
v
Mnn(v,2)
v2 = c(0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5)
dim(v2) <- c(3,5)
dim(v2) <- c(3,7)
dim(v2) <- c(3,6)
v2
v2 <- rep(0:5,3)
v2
dim(v2) <- c(3,6)
v2
v2 = c(0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5)
dim(v2) <- c(6,3)
v2
v2 <- rep(0:5,3)
dim(v2) <- c(6,3)
v2
Mnn(v2,1)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Mnn(v2,1)
Mnn(v2,2)
Mnn(v2,3)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
k <- Mnn(v)
k <- Mnn(v,4)
k
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
k
k <- Mnn(v,4)
v
k <- Mnn(v,5)
k
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
v <- rep(c(1,2,3,4,20,21,22,23)4)
v <- rep(c(1,2,3,4,20,21,22,23),4)
v
dim(v) <- (4,3)
dim(v) <- c(4,3)
dim(v) <- c(4,8)
v
dim(v) <- c(8,4)
v
k <- Mnn(v,3)
k
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
Mnn_graph(k)
v <-rep(c(1,2,3,10,11,12,20,21,22),4)
dim(v) <-(12,4)
dim(v) <-c(12,4)
dim(v) <-c(9,4)
v
k <-Mnn(v,2)
k
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
v <-rep(c(1,2,3,10,11,12,20,21,22),4)
dim(v) <-c(9,4)
k <-Mnn(v,2)
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
v <-rep(1:10,4)
dim(v) <- c(10,4)
v <-rep(c(1,2,3,10,11,12,20,21,22),4)
dim(v) <-c(9,4)
k <-Mnn(v,2)
v
sqrt(21*21*4)
sqrt(9*9*4)
sqrt(10*10*4)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
v
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
k <-Mnn(v,2)
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
k <-Mnn(v,2)
k
Mnn_graph(k)
z <- Mnn_graph(k)
z
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
z <- Mnn_graph(k)
z
rowsum(z)
rowSums(z)
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
}
Laplacian_eigen(z,1)
ev <- eigen(G)
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
}
Laplacian_eigen(z,1)
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
ev$vectors[order(ev$values)]
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[order(ev$values)]
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- order(ev$values)
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[order(ev$values),]
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[,order(ev$values)]
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[,order(ev$values)][,2:k+1]
}
gg <- Laplacian_eigen(z,1)
gg
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[,order(ev$values)][,1:k+1]
}
gg <- Laplacian_eigen(z,1)
gg
gg <- Laplacian_eigen(z,2)
gg
kmeans(gg,2)
gg <- Laplacian_eigen(z,3)
kmeans(gg,2)
kmeans(gg,3)
spectral_clustering <- function(M,k)
{
kmeans(Laplacian_eigen(Mnn_graph(Mnn(M,k)),k))
}
asdas <- spectral_clustering(v,3)
spectral_clustering <- function(M,k)
{
kmeans(Laplacian_eigen(Mnn_graph(Mnn(M,k)),k),k)
}
asdas <- spectral_clustering(v,3)
asdas
v
v2 <- Mnn(v,3)
v2
v3 <- Mnn_graph(v2,3)
spectral_clustering <- function(M,k)
{
kmeans(Laplacian_eigen(Mnn_graph(Mnn(M,k))),k)
}
asdas <- spectral_clustering(v,3)
spectral_clustering <- function(M,k)
{
kmeans(Laplacian_eigen(Mnn_graph(Mnn(M,k)),k),k)
}
asdas <- spectral_clustering(v,3)
asdas
v2 <- Mnn(v,3)
v3 <- Mnn_graph(v2)
v3
Laplacian_eigen(v3,3)
v4 <-Laplacian_eigen(v3,3)
v4
v5 <-kmeans(v4,3)
v5
ds <- spectral_clustering(v,3)
ds
v
Mnn(v,3)
v2 <- Mnn(v,3)
v2
v3 <- Mnn_graph(v2)
v3
v4 <- Laplacian_eigen(v3,3)
v4
v5 <- kmeans(v4,3)
v5
ds <- spectral_clustering(v,3)
ds
hclust()
?hclust
hclust(ddd[[2]])
p <- spectral_clustering(ddd[[2]],max(ddd[[3]]),2)
ReadAllFiles <- function()
{
setwd("C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\pd2-zbiory-benchmarkowe")
file_list <- list.files(recursive=TRUE)
tmp <-read.csv(file_list[1],sep = "\t")
k <-matrix(unlist(tmp), ncol = length(tmp))
objects <- list()
k <- stri_subset_regex(file_list,".data.gz", negate=FALSE)
for (val in k)
{
k2 <- stri_sub(val,to = stri_locate_first_fixed(val,".")[,1]-1)
matrix <- read.csv(paste(k2[1],".data.gz", sep=""),sep = "\t")
colnames(matrix) <-NULL
matrix2 <- matrix(unlist(matrix), ncol = length(matrix))
labels <- read.csv(paste(k2[1],".labels0.gz", sep=""),sep = "\t")
objects  <- append(objects,list(k2, matrix2, labels))
}
return (objects)
}
ddd <- ReadAllFiles()
library("stringi")
Sys.setenv("PKG_CXXFLAGS"="-std=c++14")
Rcpp::sourceCpp('C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\Mnn.Cpp')
library("stringi")
Laplacian_eigen <- function(G, k)
{
diag(rowSums(G))-G;
ev <- eigen(G)
k2 <- ev$vectors[,order(ev$values)][,1:k+1]
}
spectral_clustering <- function(X,k,M)
{
kmeans(Laplacian_eigen(Mnn_graph(Mnn(X,M)),k),k)
}
ReadAllFiles <- function()
{
setwd("C:\\Users\\Tomasz\\Desktop\\PRDPY - project 2\\pd2-zbiory-benchmarkowe")
file_list <- list.files(recursive=TRUE)
tmp <-read.csv(file_list[1],sep = "\t")
k <-matrix(unlist(tmp), ncol = length(tmp))
objects <- list()
k <- stri_subset_regex(file_list,".data.gz", negate=FALSE)
for (val in k)
{
k2 <- stri_sub(val,to = stri_locate_first_fixed(val,".")[,1]-1)
matrix <- read.csv(paste(k2[1],".data.gz", sep=""),sep = "\t")
colnames(matrix) <-NULL
matrix2 <- matrix(unlist(matrix), ncol = length(matrix))
labels <- read.csv(paste(k2[1],".labels0.gz", sep=""),sep = "\t")
objects  <- append(objects,list(k2, matrix2, labels))
}
return (objects)
}
ddd <- ReadAllFiles()
hclust(ddd[[2]])
hclust(dist(ddd[[2]]))
tmp <- hclust(dist(ddd[[2]]))
tmp
plot(tmp)
cutree(tmp)
?cutree
cutree(tmp, k = 1 : max(ddd[3]))
max(ddd[[3]])
cutree(tmp, k = 1 : integer(max(ddd[3])))
cutree(tmp, k = 1 : max(ddd[[3]]))
max(ddd[[3]]))
max(ddd[[3]])
cutree(tmp, k  = max(ddd[[3]]))
?dendextend::FM_index
install.packages(dendextend)
install.packages("dendextend")
?dendextend::FM_index
package(dandextend)
library(dandextend)
library("dendextend")
dendextend::FM_index(cutree(tmp, k  = max(ddd[[3]])),ddd[[3]],assume_sorted_vectors =TRUE)
install.packages("dendextend")
dendextend::FM_index(cutree(tmp, k  = max(ddd[[3]])),ddd[[3]],assume_sorted_vectors =TRUE)
?mclust::adjustedRandIndex
install.package("mclust")
install.packages("mclust")
?mclust::adjustedRandIndex
library(mclust)
adjustedRandIndex(cutree(tmp, k  = max(ddd[[3]])),ddd[[3]])
lenght(cutree(tmp, k  = max(ddd[[3]]))
)
length(cutree(tmp, k  = max(ddd[[3]])))
length(ddd[[3]]
)
ddd[[3]]
cutree(tmp, k  = max(ddd[[3]])))
cutree(tmp, k  = max(ddd[[3]]))
adjustedRandIndex(cutree(tmp, k  = max(ddd[[3]])),unlist(ddd[[3]]))
head(ddd[[4]])
head(ddd[[3]])
unlist(ddd[[3]])
spectral_clustering(ddd[[2]],2,2)
c <- spectral_clustering(ddd[[2]],2,2)
adjustedRandIndex(c,unlist(ddd[[3]]))
c2 <- spectral_clustering(ddd[[2]],2,2)
adjustedRandIndex(c2,unlist(ddd[[3]]))
length(c2)
c2
c2["Clustering vector"]
c2[3]
c2[2]
c2[1]
adjustedRandIndex(c2[1],unlist(ddd[[3]]))
adjustedRandIndex(c2[[1],unlist(ddd[[3]]))
adjustedRandIndex(c2[[1]],unlist(ddd[[3]]))
